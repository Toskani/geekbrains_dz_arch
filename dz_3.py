# # 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# # Числа запрашивать у пользователя, предусмотреть ситуации деления на ноль.
def my_division():
    try:
        val_0 = float(input("Введите первое число: "))
        val_1 = float(input("Ввведите второе число: "))
    except ValueError:
        return "Ошибка! Ожидалось число."
    try:
        delete = val_0 / val_1
    except ZeroDivisionError:
        return "Ошибка деления на 0."
    return delete


result = my_division()
print(result)


# # 2. Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# # имя, фамилия, год рождения, город проживания, email, телефон. Функциия должна принимать
# # параметры как именованные аргументы. Реализовать вывод данных о пользователе одной строкой.
def my_func(name, surname, city, year, mail, phone):
    return f'name: {name}, ' \
           f'name: {surname}, ' \
           f'name: {city}, ' \
           f'name: {year}, ' \
           f'name: {mail}, ' \
           f'name: {phone} ' \


print(my_func(name='Roman',
              surname='Kronor',
              city='Moscow',
              year='1993',
              mail='roman@gmail.com',
              phone='8916981260'))


#
#
# # 3. Реализовать функцию my_func(),
# # которая принимает три позиционных аргумента,
# # и возвращает сумму наибольших двух аргументов.
def my_func():
    try:
        val_0 = float(input("Введите первое число: "))
        val_1 = float(input("Ввведите второе число: "))
        val_2 = float(input("Ввведите второе число: "))
        for_val = [val_0, val_1, val_2]
        for_val.remove(min(val_0, val_1, val_2))
    except ValueError:
        return "Ошибка! Ожидалось число."
    return sum(for_val)


result = my_func()
print(result)


# # 4. Программа принимает действительное положительное число x и целое
# # отрицательное число y. Необходимо выполнить возведение числа x
# # в степень y. Задание необходимо реализовать в виде функции
# # my_func(x, y). При решении задания необходимо обойтись без
# # встроенной функции возведения числа в степень.
# # Подсказка: попробуйте решить задачу двумя способами. Первый —
# # возведение в степень с помощью оператора **. Второй — более сложная
# # реализация без оператора **, предусматривающая использование цикла.
def my_func(x, y):
    return 1 / x ** abs(y)
    # return x ** y


print(my_func(2, -3))


# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале
# нужно добавить сумму этих чисел к полученной ранее сумме и после этого завершить программу.
def summary():
    ex = False
    result: int = 0
    while ex == False:
        numbers = input('Enter vars or q exit: ').split()
        res_line = 0
        for num in numbers:
            if 'q' in num:
                ex = True
                break
            res_line += int(num)
            result += res_line
    return result


f = summary()
print(f)


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв
# и возвращающую его же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов,
# разделенных пробелом. Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().
def int_func():
    word = input("Введите текст: ")
    res = word.title()
    return res


result = int_func()
print(result, type(result))

# Немного смутило задание, оно столь простое или я что-то не учел?
