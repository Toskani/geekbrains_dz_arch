# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя,
# а указать явно, в программе.
my_list = [2, 2.5, False, bin(9)]
for el in my_list:
    print(el, type(el), end=" ")

# 2. Для списка реализовать обмен значений соседних элементов,
# т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
# При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().
my_list = ['a', 'b', 'c', 'd', 'e']
el = 0
if len(my_list) % 2 == 0:
    i = 0
    while i < len(my_list):
        el = my_list[i]
        my_list[i] = my_list[i + 1]
        my_list[i + 1] = el
        i += 2
else:
    i = 0
    while i < len(my_list) - 1:
        el = my_list[i]
        my_list[i] = my_list[i + 1]
        my_list[i + 1] = el
        i += 2
print(my_list)

# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.
season_list = ['Лето', 'Осень', 'Зима', 'Весна']
season_dict = {'key_1': 'Лето', 'key_2': 'Осень', 'key_3': 'Зима', 'key_4': 'Весна'}
month = 0
try:
    month = int(input('Введите номер месяца: '))
except ValueError as error:
    print('Ошибка! Введите целое число')
if month == 12 or month == 1 or month == 2:
    print('Ваш выбор:', season_list[2])
    print('Ваш выбор:', season_dict.get('key_3'))
elif month == 3 or month == 4 or month == 5:
    print('Ваш выбор:', season_list[3])
    print('Ваш выбор:', season_dict.get('key_4'))
elif month == 6 or month == 7 or month == 8:
    print('Ваш выбор:', season_list[0])
    print('Ваш выбор:', season_dict.get('key_1'))
elif month == 9 or month == 10 or month == 11:
    print('Ваш выбор:', season_list[1])
    print('Ваш выбор:', season_dict.get('key_2'))
else:
    print('Месяцев всего 12, это больше или равно 1 и меньше или равно 12. Вернись обратно и введи корректно. '
          'Спасибо :)')

# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки необходимо пронумеровать.
# Если в слово длинное, выводить только первые 10 букв в слове.
my_str = input("Введите строку из нескольких слов, разделённых пробелами: ")
my_list = my_str.split()
index = 0
for el in my_list:
    index += 1
    print(index, el[:10])
# сообразил, что элемент будет строкой, поэтому это обрезание до 10, так как последний el не включается

# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же
# значением должен разместиться после них. Подсказка.
# Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
my_list = [7, 5, 3, 3, 2]
el = 0
pos1 = 0
pos2 = 0
result = 0
try:
    el = int(input("Введите новый элемент рейтинга: "))
except ValueError as error:
    print("Ошибка! Введите целое число: ")
if el < 0:
    el = int(input("Ошибка! Введите натуральный элемент: "))
else:
    pos = my_list.count(el)
    for element in my_list:
        if pos > 0:
            pos1 = my_list.index(el)
            my_list.insert(pos1+pos, el)
            break
        else:
            if el > element:
                pos2 = my_list.index(element)
                my_list.insert(pos2, el)
                break
            elif el < my_list[len(my_list) - 1]:
                my_list.append(el)
print(my_list)

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами
# (характеристиками товара: название, цена, количество, единица измерения).
# Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
product = []
feature = {}
part2 = {}
name = 0
feature_key = 0
feature_value = 0
while input("Добавьте информацию о товаре, да/нет: ") == 'да':
    name = input("Введите название продкута: ")
    while input("Добавьте характеристики товара, да/нет ") == 'да':
        feature_key = input("Введите id товара: ")
        feature_value = input("Введите : ")
        feature[feature_key] = feature_value
    product.append(tuple([name, feature]))
print(product)
for el in product:
    for feature_key, feature_value in el[1].items():
        if feature_key in part2:
            part2[feature_key].append(feature_value)
        else:
            part2[feature_key] = [feature_value]
print(part2)
